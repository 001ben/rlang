% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dots.R
\name{dots_splice}
\alias{dots_splice}
\title{Extract dots with full splicing.}
\usage{
dots_splice(...)
}
\arguments{
\item{...}{Arguments with full splicing semantics. \link[=is_bare_list]{Bare
lists} and arguments marked with \code{\link[rlang:spliced]{rlang::spliced()}}
are spliced in the returned list.}
}
\description{
Like \code{\link[=dots_list]{dots_list()}}, \code{dots_splice()} evaluates all arguments
contained in \code{...} and returns them as a list. It has full splicing
semantics: in addition to lists marked explicitly for splicing,
\link[=is_bare_list]{bare lists} are spliced as well. See \code{\link[=dots_list]{dots_list()}}
for a version that only splices explicitly.
}
\details{
\code{dots_list()} and \code{dots_splice()} are simple aliases to
\code{\link[=splice]{splice()}}. Their main purpose is to provide documentation for the
\code{...} argument that developers can inherit from in their packages.
}
\examples{
# dots_splice() splices lists marked with spliced() as well as bare
# lists:
x <- list(1, 2)
dots_splice(spliced(x), 3)
dots_splice(x, 3)
}
\seealso{
\code{\link[=dots_list]{dots_list()}} for explicit splicing semantics, and
\code{\link[=dots_exprs]{dots_exprs()}} for extracting dots without evaluation.
}
