% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy-eval.R
\name{tidy_eval_}
\alias{tidy_eval_}
\title{Tidy evaluation in a custom environment.}
\usage{
tidy_eval_(f, bottom, top = NULL)
}
\arguments{
\item{f}{A formula. Any expressions wrapped in \code{ UQ() } will
will be "unquoted", i.e. they will be evaluated, and the results
inserted back into the formula. See \code{\link{tidy_quote}()}
for more details. If a list of formulas, \code{tidy_eval()} is
applied to each of them in turn and the list of results is
returned.}

\item{bottom}{This is the environment (or the bottom of a set of
environments) containing definitions for overscoped symbols. The
bottom environment typically contains pronouns (like `.data`)
while its direct parents contain the overscoping bindings. The
last one of these parents is the `top`.}

\item{top}{The top environment of the overscope. During tidy
evaluation, this environment is chained and rechained to lexical
enclosures of self-evaluating formulas (or quosures). This is the
mechanism that ensures hygienic scoping: the bindings in the
overscope have precedence, but the bindings in the dynamic
environment where the tidy quotes were created in the first place
are in scope as well.}
}
\description{
We recommend using [tidy_eval()] in your DSLs as much as possible
to ensure some consistency across packages (`.data` and `.env`
pronouns, etc). However, some DSLs might need a different
evaluation environment. In this case, you can call `tidy_eval_()`
with the bottom and the top of your custom overscope (see
[tidy_overscope()] for more information).
}
\details{
Note that `tidy_eval_()` always installs a `.env` pronoun in the
bottom environment of your dynamic scope. This pronoun provides a
shortcut to the original lexical enclosure (typically, the dynamic
environment of a captured argument, see [tidy_capture()]). It also
cleans up the overscope after evaluation. See [overscope_eval()]
for evaluating several quosures in the same overscope.
}
