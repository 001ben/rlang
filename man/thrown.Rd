% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conditions.R
\name{thrown}
\alias{inplace}
\alias{thrown}
\title{Create a thrown or in place handler.}
\usage{
thrown(handler)

inplace(handler, muffle = FALSE)
}
\arguments{
\item{handler}{A handler function that takes a condition as
argument.}

\item{muffle}{Whether to muffle the condition after executing an
inplace handler. The signalling function must have established a
muffling restart. Otherwise, an error will be issued.}
}
\description{
There are two types of condition handlers: exiting handlers, which
are thrown to the place where they have been established (e.g.,
\code{\link{with_handlers}()}'s evaluation frame), and local
handlers, which are executed in place (e.g., where the condition
has been signalled). \code{thrown()} and \code{inplace()} create
handlers suitable for \code{\link{with_handlers}()}.
}
\details{
A subtle point in the R language is that conditions are not thrown,
handlers are. \code{\link[base]{tryCatch}()} and
\code{\link{with_handlers}()} actually catch handlers rather than
conditions. When a critical condition signalled with
\code{\link[base]{stop}()} or \code{\link{abort}()}, R inspects the
handler stack and looks for a handler that can deal with the
condition. If it finds a throwable handler, it throws it to the
function that established it (\code{\link{with_handlers}()}). If R
finds an inplace handler, it executes it locally. Only if no
handler can deal with the critical condition will R jump to
top-level (see \code{\link{rst_abort}()}).
}
\seealso{
\code{\link{with_handlers}()} for examples,
  \code{\link{restarting}()} for another kind of inplace handler.
}

