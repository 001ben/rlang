% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/call.R
\name{lang_head}
\alias{lang_head}
\alias{lang_tail}
\title{Return the head or tail of a call object}
\usage{
lang_head(lang)

lang_tail(lang)
}
\arguments{
\item{lang}{The \code{call} or \code{.call} argument of the renamed
functions.}
}
\description{
These functions return the head or the tail of a call. See section
on calls as parse trees in \code{\link[=call2]{call2()}}. They are equivalent to
\code{\link[=node_car]{node_car()}} and \code{\link[=node_cdr]{node_cdr()}} but support quosures and check that
the input is indeed a call before retrieving the head or tail (it
is unsafe to do this without type checking).

\code{lang_head()} returns the head of the call without any conversion,
unlike \code{\link[=call_name]{call_name()}} which checks that the head is a symbol and
converts it to a string. \code{lang_tail()} returns the pairlist of
arguments (while \code{\link[=lang_args]{lang_args()}} returns the same object converted to
a regular list)
}
\examples{
lang <- quote(foo(bar, baz))
lang_head(lang)
lang_tail(lang)
}
\seealso{
\link{pairlist}, \code{\link[=lang_args]{lang_args()}}, \code{\link[=call2]{call2()}}
}
