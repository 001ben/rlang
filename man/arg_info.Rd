% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arg.R
\name{arg_info}
\alias{arg_info}
\alias{arg_info_}
\title{Inspect an argument}
\usage{
arg_info(x)

arg_info_(expr, stack)
}
\arguments{
\item{x}{An argument to a function.}

\item{expr}{A quoted symbol giving the name of the argument to
inspect.}

\item{stack}{A \code{call_stack} object as returned by
\code{\link{call_stack}()}.}
}
\value{
A list containing:
  \item{expr}{The expression provided in the original call. If the
    argument was missing, \code{expr} is the default argument of
    the function; if there was no default, \code{expr} is
    \code{NULL}.}

  \item{eval_frame}{The frame providing the scope for \code{expr},
    which should normally be evaluated in \code{eval_frame$env}.
    This is either the original calling frame, or the execution
    frame of the function that was called if the argument was
    missing. The difference reflects the evaluation rules of R,
    where default arguments are scoped within the called function
    rather than the calling frame.}

  \item{caller_frame}{The original calling frame. This is the same
    as \code{eval_frame} unless no argument was supplied in the
    original call. In this case, \code{caller_frame$env} is the
    environment in which the argument would have been evaluated,
    had it been supplied.}
}
\description{
\code{arg_info()} and \code{arg_info_()} are the workhorses of all
functions providing information about the evaluation context of an
argument (e.g., \code{\link{arg_expr}()}, \code{\link{arg_env}()},
etc). These functions climb the call stack to find where an
argument was first supplied, with which expression, in which
evaluation environment.
}
\details{
\code{arg_info_()} is the standard-evaluation version of
\code{arg_info()} and takes a symbol and a call stack object.
}
\seealso{
\code{\link{arg_label}()}, \code{\link{arg_expr}()},
  \code{\link{arg_env}()}.
}

