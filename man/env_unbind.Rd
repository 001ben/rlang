% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/env.R
\name{env_unbind}
\alias{env_eliminate}
\alias{env_unbind}
\title{Remove bindings from an environment.}
\usage{
env_unbind(env, nms)

env_eliminate(env, nms)
}
\arguments{
\item{env}{An environment or an object with a S3 method for
\code{env()}.}

\item{nms}{A character vector containing the names of the bindings
to remove.}
}
\value{
The input object \code{env}, with its associated
  environment modified in place.
}
\description{
\code{env_unbind()} is the complement of
\code{\link{env_bind}()}. Like \code{env_has()}, it ignores the
parent environments of \code{env}. On the other hand,
\code{env_eliminate()} is akin to \code{env_sees()} and will track
down bindings in parent environments.
}
\examples{
dict <- stats::setNames(letters, letters)
env_bind(environment(), dict)
env_has(environment(), letters)

# env_unbind() will remove bindings:
env_unbind(environment(), letters)
env_has(environment(), letters)

# env_eliminate() removes all bindings:
parent <- env_new(env_empty(), list(foo = "a"))
env <- env_new(parent, list(foo = "b"))
env_eliminate(env, "foo")
env_sees(env, "foo")
}

