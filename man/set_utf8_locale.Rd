% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/types-chr.R
\name{set_utf8_locale}
\alias{set_utf8_locale}
\alias{set_latin1_locale}
\alias{set_mbcs_locale}
\title{Set the locale's codeset for testing.}
\usage{
set_utf8_locale()

set_latin1_locale()

set_mbcs_locale()
}
\description{
Setting a locale's codeset (specifically, the \code{LC_CTYPE}
category) produces side effects in R's handling of strings. The
most important of these affects how the R parser marks strings. R
has specific internal support for latin1 (single-byte encoding) and
UTF-8 (multi-bytes variable-width encoding) strings. If the locale
codeset is latin1 or UTF-8, the parser will mark all strings with
the corresponding encoding. It is important for strings to have
consistent encoding markers, as they determine a number of internal
encoding conversions when R or packages handle strings (see
\code{\link{str_set_encoding}()} for some examples).
}
\details{
UTF-8 is the only variable-width encoding supported in R.
Multi-byte fixed-width encodings like UCS-2 are supported by R, but
supplying UTF-16 strings (the default Unicode encoding on Windows)
will cause the parser to choke on the character delimiters (though
you may not see that behaviour in Windows IDEs if they translate
inputs to another encoding for you). Note finally that
\code{set_utf8_locale()} will not work on Windows as only latin1
and MBCS locales are supported on this OS.

Note that these helpers are only provided for testing interactively
the effects of changing locale codeset. They let you quickly change
the default text encoding to latin1, UTF-8, or non-UTF-8 MBCS. They
are not widely tested and do not provide a way of setting the
language and region of the locale. They have permanent side effects
and should not be used in package examples, unit tests, or in the
course of a data analysis.
}
