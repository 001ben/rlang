% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/call.R
\name{call_head}
\alias{call_head}
\alias{call_tail}
\title{Return the head or tail of a call}
\usage{
call_head(call)

call_tail(call)
}
\arguments{
\item{call}{Can be a call or a quosure that wraps a call.}
}
\description{
These functions return the head or the tail of a call. See section
on calls as parse trees in \code{\link[=call2]{call2()}}. They are equivalent to
\code{\link[=node_car]{node_car()}} and \code{\link[=node_cdr]{node_cdr()}} but support quosures and check that
the input is indeed a call before retrieving the head or tail (it
is unsafe to do this without type checking).

\code{call_head()} returns the head of the call without any conversion,
unlike \code{\link[=call_name]{call_name()}} which checks that the head is a symbol and
converts it to a string. \code{call_tail()} returns the pairlist of
arguments (while \code{\link[=lang_args]{lang_args()}} returns the same object converted to
a regular list)
}
\section{Life cycle}{


In rlang 0.2.0, \code{lang_head()} and \code{lang_tail()} were
soft-deprecated and renamed to \code{call_head()} and \code{call_tail()}. See
lifecycle section in \code{\link[=call2]{call2()}} for more about this change.
}

\examples{
call <- quote(foo(bar, baz))
call_head(call)
call_tail(call)
}
\seealso{
\link{pairlist}, \code{\link[=lang_args]{lang_args()}}, \code{\link[=call2]{call2()}}
}
