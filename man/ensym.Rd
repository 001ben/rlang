% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr-sym.R
\name{ensym}
\alias{ensym}
\alias{ensyms}
\title{Capture a symbol}
\usage{
ensym(arg)

ensyms(..., .named = FALSE, .ignore_empty = c("trailing", "none", "all"),
  .unquote_names = TRUE)
}
\arguments{
\item{arg}{A symbol referring to an argument. The expression
supplied to that argument will be captured unevaluated.}

\item{...}{Arguments to extract.}

\item{.named}{Whether to ensure all dots are named. Unnamed
elements are processed with \code{\link[=expr_text]{expr_text()}} to figure out a default
name. If an integer, it is passed to the \code{width} argument of
\code{expr_text()}, if \code{TRUE}, the default width is used. See
\code{\link[=exprs_auto_name]{exprs_auto_name()}}.}

\item{.ignore_empty}{Whether to ignore empty arguments. Can be one
of \code{"trailing"}, \code{"none"}, \code{"all"}. If \code{"trailing"}, only the
last argument is ignored if it is empty.}

\item{.unquote_names}{Whether to treat \code{:=} as \code{=}. Unlike \code{=}, the
\code{:=} syntax supports \code{!!} unquoting on the LHS.}
}
\description{
\itemize{
\item Like \code{\link[=enexpr]{enexpr()}} and \code{\link[=enquo]{enquo()}}, \code{ensym()} makes an argument
auto-quoting. It always returns a symbol and issues an error if
the input is not a string or a symbol. It supports
\link{quasiquotation}.
\item Like \code{\link[=enexprs]{enexprs()}} and \code{\link[=enquos]{enquos()}}, \code{ensyms()} captures multiple
arguments at once. In particular it captures all arguments passed
in \code{...}. If any of the captured argument is not a symbol, it
throws an error.
}
}
\examples{
quote_sym <- function(arg) ensym(arg)
quote_sym(foo)
quote_sym("foo")

# The ensymed argument is quasiquoted:
var <- "foo"
quote_sym(var)
quote_sym(!!var)
}
