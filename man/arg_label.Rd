% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arg.R
\name{arg_label}
\alias{arg_env}
\alias{arg_find}
\alias{arg_label}
\alias{arg_text}
\title{Find the expression associated with an argument}
\usage{
arg_label(x)

arg_text(x, width = 60L, nlines = Inf)

arg_find(x)

arg_env(x, default_env)
}
\arguments{
\item{x}{A promise (function argument)}

\item{width}{Width of each line}

\item{nlines}{Maximum number of lines to extract.}

\item{default_env}{This argument is now deprecated and has no
longer any effect since \code{arg_env()} will always return an
environment.}
}
\description{
\code{arg_find()} finds the full expression; \code{arg_text()} turns the
expression into a single string; \code{arg_label()} formats it nicely for
use in messages. \code{arg_env()} finds the environment associated with
the expression.
}
\details{
These functions never force promises, and will work even if a promise has
previously been forced.
}
\examples{
# Unlike substitute(), arg_find() finds the original expression
f <- function(x) g(x)
g <- function(y) h(y)
h <- function(z) list(substitute(z), arg_find(z))

f(1 + 2 + 3)

arg_label(10)
# Names a quoted with ``
arg_label(x)
# Strings are encoded
arg_label("a\\nb")
# Expressions are captured
arg_label(a + b + c)
# Long expressions are collapsed
arg_label(foo({
  1 + 2
  print(x)
}))
}

