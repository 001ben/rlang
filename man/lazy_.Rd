% Generated by roxygen2 (4.0.1): do not edit by hand
\name{lazy_}
\alias{lazy}
\alias{lazy_}
\title{Capture expression for later lazy evaluation.}
\usage{
lazy_(expr, env)

lazy(expr, env = parent.frame())
}
\arguments{
\item{expr}{Expression to capture. For \code{lazy_} must be a name
or a call.}

\item{env}{Environment in which to evaluate expr.}
}
\description{
\code{lazy()} uses non-standard evaluation to turn promises into lazy
objects; \code{lazy_()} does standard evaluation and is suitable for
programming.
}
\details{
Use \code{lazy()} like you'd use \code{\link{substitute}()}
to capture an unevaluated promise. Compared to \code{substitute()} it
also captures the environment associated with the promise, so that you
can correctly replay it in the future.
}
\examples{
lazy_(quote(a + x), globalenv())
lazy(a + b / c)

f <- function(x = b - a) {
  lazy(x)
}
f()
f(a + b / c)
}

